. {{ oracle_scripts_dir }}/setEnv.sh

sqlplus -s / as sysdba <<EOF
--whenever sqlerror exit sql.sqlcode;
whenever sqlerror continue;
ALTER DATABASE FLASHBACK ON;
ALTER DATABASE SET STANDBY NOLOGGING FOR LOAD PERFORMANCE;
alter database add standby logfile thread 1 group 4 ('+DATA_DG','+FRA_DG')  size 50m;
alter database add standby logfile thread 1 group 5 ('+DATA_DG','+FRA_DG')  size 50m;
alter database add standby logfile thread 1 group 6 ('+DATA_DG','+FRA_DG')  size 50m;
alter database add standby logfile thread 1 group 7 ('+DATA_DG','+FRA_DG')  size 50m;
alter system set log_archive_config='DG_config=({{ prim_oracle_unqname }}, {{ stby_oracle_unqname }})' scope=both;
ALTER SYSTEM SET log_archive_dest_1='location=use_db_recovery_file_dest valid_for=(all_logfiles,all_roles) db_unique_name={{ prim_oracle_unqname }}' SCOPE=both;
ALTER SYSTEM SET log_archive_dest_2='service={{ stby_oracle_unqname }} async valid_for=(online_logfiles,primary_role) db_unique_name={{ stby_oracle_unqname }}' SCOPE=both;
alter system set fal_server={{ stby_oracle_unqname }} scope=both; 
alter system set fal_client={{ prim_oracle_unqname }} scope=both; 
alter system set standby_file_management=auto scope=both;

exit;
EOF

cat >> ${TNS_ADMIN}/tnsnames.ora <<EOF

{{ prim_oracle_unqname }} =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = {{ node1_hostname }})(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = {{ prim_oracle_unqname }})
        (GLOBAL_NAME = {{ prim_oracle_unqname }})
    )
  )


{{ stby_oracle_unqname }} =
  (DESCRIPTION =
    (ADDRESS_LIST =
      (ADDRESS = (PROTOCOL = TCP)(HOST = {{ node2_hostname }})(PORT = 1521))
    )
    (CONNECT_DATA =
      (SERVICE_NAME = {{ stby_oracle_unqname }})
        (GLOBAL_NAME =  {{ stby_oracle_unqname }})
    )
  )

EOF



