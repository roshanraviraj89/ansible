. {{ oracle_scripts_dir }}/setEnv.sh




  cat > ${TNS_ADMIN}/tnsnames.ora <<EOF
LISTENER = (ADDRESS = (PROTOCOL = TCP)(HOST = {{ scan_name }})(PORT = {{scan_port}}))
{{cdb_service}}= 
(DESCRIPTION = 
  (ADDRESS = (PROTOCOL = TCP)(HOST = {{scan_name}})(PORT = {{scan_port}}))
  (CONNECT_DATA =
    (SERVER = DEDICATED)
    (SERVICE_NAME = {{cdb_service}})
  )
)
{{pdb_service}}= 
(DESCRIPTION = 
  (ADDRESS = (PROTOCOL = TCP)(HOST = {{scan_name}})(PORT = {{scan_port}}))
  (CONNECT_DATA =
    (SERVER = DEDICATED)
    (SERVICE_NAME = {{pdb_service}})
  )
)
EOF

  cat > ${TNS_ADMIN}/sqlnet.ora <<EOF
SQLNET.INBOUND_CONNECT_TIMEOUT=400
NAMES.DIRECTORY_PATH= (TNSNAMES, EZCONNECT)
EOF

#fi



  echo "******************************************************************************"
  echo "The database files don't exist, so create a new database." `date`
  echo "******************************************************************************"
#  lsnrctl start

  dbca -silent -createDatabase                                                 \
    -templateName General_Purpose.dbc                                          \
    -gdbname {{oracle_unqname}} -responseFile NO_VALUE                         \
    -characterSet AL32UTF8                                                     \
    -sysPassword {{ sys_password }}                                            \
    -systemPassword {{ sys_password }}                                         \
    -createAsContainerDatabase true                                            \
    -numberOfPDBs 1                                                            \
    -pdbName {{pdb_name}}                                                       \
    -pdbAdminPassword {{ sys_password }}                                       \
    -asmsnmpPassword {{ sys_password }}                                       \
    -databaseType MULTIPURPOSE                                                 \
    -memoryMgmtType auto_sga                                                   \
    -totalMemory 2048                                                          \
    -storageType ASM                                                          \
    -nodelist {{node1_hostname}},{{node2_hostname}}                            \
    -diskGroupName {{ data_dg }}                                             \
    -recoveryGroupName {{ fra_dg }}                                          \
    -useOMF true                                                               \
    -redoLogFileSize 50                                                        \
    -emConfiguration NONE                                                      \
    -ignorePreReqs

  echo "******************************************************************************"
  echo "Set the PDB to auto-start." `date`
  echo "******************************************************************************"
  sqlplus / as sysdba <<EOF
alter system set db_create_file_dest='+{{ data_dg }}';
alter pluggable database ${PDB_NAME} save state instances=all;
exit;
EOF

echo "******************************************************************************"
echo "Create Database password file." `date`
echo "******************************************************************************"
orapwd file='{{ oracle_base_config }}/dbs/orapw{{ node1_oracle_sid }}'  password={{ sys_password }} force=y 

echo "******************************************************************************"
echo "Creating a CDB service" `date`
echo "******************************************************************************"
srvctl add service -db {{oracle_unqname}} -service {{cdb_service}} -preferred {{node1_oracle_sid}},{{node2_oracle_sid}}
srvctl start service -db {{oracle_unqname}} -service {{cdb_service}}

echo "******************************************************************************"
echo "Creating a PDB service" `date`
echo "******************************************************************************"
srvctl add service -db {{oracle_unqname}} -service {{pdb_service}} -pdb {{pdb_name}} -preferred {{node1_oracle_sid}},{{node2_oracle_sid}}
srvctl start service -db {{oracle_unqname}} -service {{pdb_service}}


#  echo "******************************************************************************"
#  echo "Flip the auto-start flag." `date`
#  echo "******************************************************************************"
#  cp /etc/oratab /tmp
#  sed -i -e "s|${ORACLE_SID}:${ORACLE_HOME}:N|${ORACLE_SID}:${ORACLE_HOME}:Y|g" /tmp/oratab
#  cp -f /tmp/oratab /etc/oratab

#fi

exit 0
