nohup: ignoring input

PLAY [check the privilege escalation on hrmaxpd2035.emea.hays.loc] *************

TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] ****************
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
[WARNING]: Platform linux on host 10.100.36.15 is using the discovered Python
interpreter at /usr/bin/python, but future installation of another Python
interpreter could change this. See https://docs.ansible.com/ansible/2.9/referen
ce_appendices/interpreter_discovery.html for more information.
ok: [10.100.36.15]
[WARNING]: Platform aix on host 10.190.17.156 is using the discovered Python
interpreter at /usr/bin/python, but future installation of another Python
interpreter could change this. See https://docs.ansible.com/ansible/2.9/referen
ce_appendices/interpreter_discovery.html for more information.
ok: [10.190.17.156]

TASK [shell _raw_params=hostname
whoami
date
python --version
] ****************
changed: [10.100.36.15]
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [debug var=output.stdout_lines] *******************************************
ok: [10.190.17.156] => {
    "output.stdout_lines": [
        "hrmaxpd2035",
        "oracle",
        "Thu Nov 14 17:25:20 GMT 2024",
        "Python 3.7.15"
    ]
}
ok: [10.100.36.15] => {
    "output.stdout_lines": [
        "foaukl1pddb-4kxck1",
        "oracle",
        "Thu Nov 14 17:25:17 GMT 2024",
        "Python 3.6.8"
    ]
}

PLAY [do the pre migration checks on hrmaxpd2035.emea.hays.loc] ****************

TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] ****************
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
ok: [10.190.17.156]

TASK [pre_mig_check : crosscheck the tablespaces and users to be migrated, and identify any users whose default tablespace is not included in the tabelsapce list _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 VERIFY OFF HEADING OFF ECHO OFF SERVEROUTPUT on FEEDBACK OFF\n 
DECLARE
        CURSOR invalid_tablespaces_cursor IS
            SELECT username, default_tablespace
            FROM dba_users
            WHERE oracle_maintained = 'N'
              AND username IN ({{ db_users | replace(',', "', '") | regex_replace('^', "'") | regex_replace('$', "'") }})
              AND default_tablespace NOT IN ({{ tablespaces | replace(',', "', '") | regex_replace('^', "'") | regex_replace('$', "'") }})
            ORDER BY username;
    BEGIN
        FOR rec IN invalid_tablespaces_cursor LOOP
            DBMS_OUTPUT.PUT_LINE('User: ' || rec.username || ', Default Tablespace: ' || rec.default_tablespace);
        END LOOP;
    END;
    /
    EXIT;" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba  
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
ok: [10.190.17.156]

TASK [pre_mig_check : Check if any rows were returned msg=All users default tabelsapces are included in the tablespace list; continuing playbook execution.] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : Fail if returned rows contain tablespaces other than USERS or SYSTEM msg=['Some users have a default tablespace that is not included in the tablespace list, nor is it USERS or SYSTEM.', '{{sql_output.stdout_lines}}']] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : Continue if all returned tablespaces are in USERS or SYSTEM msg=['All tablespaces returned that are not part of the tablespace list are either USERS or SYSTEM. Hence proceeding with the playbook.', '{{sql_output.stdout_lines}}']] ***
ok: [10.190.17.156] => {
    "msg": [
        "All tablespaces returned that are not part of the tablespace list are either USERS or SYSTEM. Hence proceeding with the playbook.",
        [
            "User: GLOBAL_BI, Default Tablespace: USERS"
        ]
    ]
}

TASK [pre_mig_check : check  if all the tablespaces are self contained _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 VERIFY OFF HEADING OFF ECHO OFF\n EXECUTE DBMS_TTS.TRANSPORT_SET_CHECK('{{tablespaces}}', TRUE);" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba  
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : display transport check out msg={{out.stdout_lines}}] ****
ok: [10.190.17.156] => {
    "msg": [
        "",
        "PL/SQL procedure successfully completed."
    ]
}

TASK [pre_mig_check : check if any violations are reported _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n SELECT * FROM TRANSPORT_SET_VIOLATIONS;" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba  
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : display transport   violations out msg={{violations_out.stdout_lines}}] ***
ok: [10.190.17.156] => {
    "msg": []
}

TASK [pre_mig_check : fail msg=One or more tablespaces are not self contained. Violations have been reported] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : check if the source database has already been set archivelog mode _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select log_mode from v\$database;" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba  
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : display the archivelog mode msg={{archive_mode.stdout_lines}}] ***
ok: [10.190.17.156] => {
    "msg": [
        "ARCHIVELOG"
    ]
}

TASK [pre_mig_check : fail msg=Source Database is on NOARCHIVELOG mode. It must be on ARCHIVELOG mode] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : check if the block change tracking has been enabled on source database _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select status from v\$block_change_tracking;" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba  
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : display the block_change_tracking msg={{block_change_tracking.stdout_lines}}] ***
ok: [10.190.17.156] => {
    "msg": [
        "ENABLED"
    ]
}

TASK [pre_mig_check : fail msg=Block change tracking is not enabled on the source database] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : check RMAN backupset configuration _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SHOW DEVICE TYPE;" | {{ source_oracle_home }}/bin/rman target /
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : display RMAN backupset configuration msg={{ backupset_out.stdout_lines }}] ***
ok: [10.190.17.156] => {
    "msg": [
        "",
        "Recovery Manager: Release 19.0.0.0.0 - Production on Thu Nov 14 17:26:51 2024",
        "Version 19.11.0.0.0",
        "",
        "Copyright (c) 1982, 2019, Oracle and/or its affiliates.  All rights reserved.",
        "",
        "connected to target database: ADRW10PD (DBID=2357369806)",
        "",
        "RMAN> ",
        "using target database control file instead of recovery catalog",
        "RMAN configuration parameters for database with db_unique_name ARW10PDF are:",
        "CONFIGURE DEVICE TYPE DISK PARALLELISM 10 BACKUP TYPE TO BACKUPSET;",
        "CONFIGURE DEVICE TYPE 'SBT_TAPE' PARALLELISM 4 BACKUP TYPE TO BACKUPSET;",
        "",
        "RMAN> ",
        "",
        "Recovery Manager complete."
    ]
}

TASK [pre_mig_check : fail msg=RMAN configuration contains COMPRESSED BACKUPSET, which is not allowed.] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : Ensure there is no unusable indexes in the source database _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select table_owner,table_name,owner,index_name,status,tablespace_name from dba_indexes where status='UNUSABLE' and tablespace_name in ({{ "'" + tablespaces | regex_replace(',', "','") + "'" }});" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba  
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : display the unusable indexes msg={{unusable_out.stdout_lines}}] ***
ok: [10.190.17.156] => {
    "msg": []
}

TASK [pre_mig_check : fail msg=One or more indexes are unusable] ***************
skipping: [10.190.17.156]

TASK [pre_mig_check : Check if CTXSYS user exists _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select username from dba_users where username='CTXSYS';" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : Ensure there are no indexes with pending rows in DR$PENDING _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select u.username, i.idx_name from ctxsys.dr\$index i, dba_users u where u.user_id=i.idx_owner# and idx_id in (select pnd_cid from ctxsys.dr\$pending);" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba
] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : Display pending indexes output msg={{pending_indexes_out.stdout_lines}}] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : fail msg=One or more indexes have pending rows in DR$PENDING. Synchronize them using the following command format: exec ctx_ddl.sync_index('USERNAME.INDEX');] ***
skipping: [10.190.17.156]

TASK [pre_mig_check : Ensure there are no APPLICATION='Y' objects in the database _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select a.object_name from dba_objects a inner join dba_users b on a.owner=b.username where b.oracle_maintained='N' and SHARING='NONE' and application='Y' order by 1;" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba  
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [pre_mig_check : display the objects with APPLICATION='Y' msg={{application_out.stdout_lines}}] ***
ok: [10.190.17.156] => {
    "msg": []
}

TASK [pre_mig_check : fail msg=One or more APPLICATION='Y' objects found ] *****
skipping: [10.190.17.156]

PLAY [check the database characterset and national character on the ADRW10PD] ***

TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] ****************
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
ok: [10.190.17.156]

TASK [source_pre_character_set_check : check database character set and national character set on the XTTS_ARW10PDF1 _raw_params=export ORACLE_SID={{source_oracle_sid}}
export ORACLE_HOME={{source_oracle_home}}
printf "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select property_name, property_value from database_properties where property_name in ('NLS_CHARACTERSET', 'NLS_NCHAR_CHARACTERSET');" | {{ source_oracle_home }}/bin/sqlplus -s {{source_conn_str}} as sysdba
] ***
[WARNING]: Using world-readable permissions for temporary files Ansible needs
to create when becoming an unprivileged user. This may be insecure. For
information on securing this, see
https://docs.ansible.com/ansible/become.html#becoming-an-unprivileged-user
changed: [10.190.17.156]

TASK [source_pre_character_set_check : display the character set output msg={{source_cha_out.stdout_lines}}] ***
ok: [10.190.17.156] => {
    "msg": [
        "NLS_NCHAR_CHARACTERSET",
        "AL16UTF16",
        "",
        "NLS_CHARACTERSET",
        "AL32UTF8"
    ]
}

TASK [source_pre_character_set_check : store the source characterset value in a local file content={{source_cha_out.stdout_lines}}, dest={{source_db}}_source_cha_set.txt] ***
changed: [10.190.17.156 -> localhost]

PLAY [check the database characterset and national character on the OTCHPDCA] ***

TASK [Gathering Facts gather_subset=['all'], gather_timeout=10] ****************
ok: [10.100.36.15]

TASK [target_pre_character_set_check : check database character set and national character set on the OTCHPDCA_CAPD _raw_params=export ORACLE_SID={{target_oracle_sid}}
export ORACLE_HOME={{target_oracle_home}}
export TNS_ADMIN={{target_tns_admin}}
echo -e "SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\n select property_name, property_value from database_properties where property_name in ('NLS_CHARACTERSET', 'NLS_NCHAR_CHARACTERSET');" | {{ target_oracle_home }}/bin/sqlplus -s {{target_conn_str}} as sysdba
] ***
fatal: [10.100.36.15]: FAILED! => {"changed": true, "cmd": "export ORACLE_SID=OTCHPDCA1\nexport ORACLE_HOME=/u02/app/oracle/product/19.0.0.0/dbhome_2\nexport TNS_ADMIN=/u02/app/oracle/product/19.0.0.0/dbhome_2/network/admin/OTCHPDCA\necho -e \"SET PAGESIZE 0 FEEDBACK OFF VERIFY OFF HEADING OFF ECHO OFF\\n select property_name, property_value from database_properties where property_name in ('NLS_CHARACTERSET', 'NLS_NCHAR_CHARACTERSET');\" | /u02/app/oracle/product/19.0.0.0/dbhome_2/bin/sqlplus -s sys/Ocean_Breeze_2024#@OTCHPDCA_CAPD as sysdba\n", "delta": "0:00:02.115939", "end": "2024-11-14 17:27:51.263675", "msg": "non-zero return code", "rc": 1, "start": "2024-11-14 17:27:49.147736", "stderr": "", "stderr_lines": [], "stdout": "ERROR:\nORA-01017: invalid username/password; logon denied\n\n\nSP2-0306: Invalid option.\nUsage: CONN[ECT] [{logon|/|proxy} [AS {SYSDBA|SYSOPER|SYSASM|SYSBACKUP|SYSDG|SYSKM|SYSRAC}] [edition=value]]\nwhere <logon> ::= <username>[/<password>][@<connect_identifier>]\n      <proxy> ::= <proxyuser>[<username>][/<password>][@<connect_identifier>]\nSP2-0306: Invalid option.\nUsage: CONN[ECT] [{logon|/|proxy} [AS {SYSDBA|SYSOPER|SYSASM|SYSBACKUP|SYSDG|SYSKM|SYSRAC}] [edition=value]]\nwhere <logon> ::= <username>[/<password>][@<connect_identifier>]\n      <proxy> ::= <proxyuser>[<username>][/<password>][@<connect_identifier>]\nSP2-0157: unable to CONNECT to ORACLE after 3 attempts, exiting SQL*Plus", "stdout_lines": ["ERROR:", "ORA-01017: invalid username/password; logon denied", "", "", "SP2-0306: Invalid option.", "Usage: CONN[ECT] [{logon|/|proxy} [AS {SYSDBA|SYSOPER|SYSASM|SYSBACKUP|SYSDG|SYSKM|SYSRAC}] [edition=value]]", "where <logon> ::= <username>[/<password>][@<connect_identifier>]", "      <proxy> ::= <proxyuser>[<username>][/<password>][@<connect_identifier>]", "SP2-0306: Invalid option.", "Usage: CONN[ECT] [{logon|/|proxy} [AS {SYSDBA|SYSOPER|SYSASM|SYSBACKUP|SYSDG|SYSKM|SYSRAC}] [edition=value]]", "where <logon> ::= <username>[/<password>][@<connect_identifier>]", "      <proxy> ::= <proxyuser>[<username>][/<password>][@<connect_identifier>]", "SP2-0157: unable to CONNECT to ORACLE after 3 attempts, exiting SQL*Plus"]}

PLAY RECAP *********************************************************************
10.100.36.15               : ok=4    changed=1    unreachable=0    failed=1    skipped=0    rescued=0    ignored=0   
10.190.17.156              : ok=25   changed=11   unreachable=0    failed=0    skipped=11   rescued=0    ignored=0   

Playbook run took 0 days, 0 hours, 2 minutes, 57 seconds
